//Count the Number of Subsets with a given difference
/*
Given an array of elements n and a integer diff, find the total no. of 
subsets possible when array is partitioned into two different subsets.
Similiar to Minimum Subset Sum Difference

Can also be asked as a Target Sum Problem.
Given an array of elements n, assign a sign +/- to all the numbers such that the addition of all 
the resultant numbers is equal to a given integer SUM. It is basically the same problem as we 
just have to form 2 subsets (one with positive sign and other with negative sign) and their 
difference is given as the SUM.
*/

#include<stdio.h>
#include<stdbool.h>

int sum(int arr[],int n){
	int i,res=0;
	for(i=0;i<n;i++)
	res+=arr[i];
	return res;
}

int countsubsetsum(int arr[],int n,int sum){
	int i,j;
	int dp[n+1][sum+1];
	
	//Initialization
	for(i=0;i<=n;i++)
	dp[i][0]=1;
	for(i=1;i<=sum;i++)
	dp[0][i]=0;
	
	for(i=1;i<=n;i++){
		for(j=1;j<=sum;j++){
			if(arr[i-1]<=j){
				dp[i][j]=dp[i-1][j]+dp[i-1][j-arr[i-1]];
			}
			else
			dp[i][j]=dp[i-1][j];
		}
	}
	
	return dp[n][sum];
}

int countsubsetdiff(int arr[],int n,int diff){
	int range=sum(arr,n);
	int sum=(range+diff)/2;
	return countsubsetsum(arr,n,sum);
}


int main(){
	int n,i,diff;
	printf("Enter the size of the array: ");
	scanf("%d",&n);
	int arr[n];
	printf("Enter the elements of the array: ");
	for(i=0;i<n;i++)
	scanf("%d",&arr[i]);
	printf("Enter the required Difference: ");
	scanf("%d",&diff);
	printf("No. of Subsets: %d",countsubsetdiff(arr,n,diff));
	return 0;
}
