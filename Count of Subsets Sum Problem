//Count of Subsetbs with a given Sum
/*
Given an array of n elements and a SUM, find the count of subsets of array whose sum is equal to the SUM
Similiar to the subset sum problem. Instead of just finding if any subset is possible we find the count of
subsets that add up to the SUM. So instead of using the OR operation we use addition since return type is int
It explores all the subsets and return the count that adds  up to the SUM.
*/

#include<stdio.h>

int countsubsetsum(int arr[],int n,int sum){
	int i,j;
	int dp[n+1][sum+1];
	
	//Initialization
	for(i=0;i<=n;i++)
	dp[i][0]=1;
	for(i=1;i<=sum;i++)
	dp[0][i]=0;
	
	for(i=1;i<=n;i++){
		for(j=1;j<=sum;j++){
			if(arr[i-1]<=j){
				dp[i][j]=dp[i-1][j]+dp[i-1][j-arr[i-1]];
			}
			else
			dp[i][j]=dp[i-1][j];
		}
	}
	
	return dp[n][sum];
}

int main(){
	int n,i,sum,res;
	printf("Enter the size of the array: ");
	scanf("%d",&n);
	int arr[n];
	printf("Enter the elements of the array: ");
	for(i=0;i<n;i++)
	scanf("%d",&arr[i]);
	printf("Enter the Sum: ");
	scanf("%d",&sum);
	res=countsubsetsum(arr,n,sum);
	if(res==0)
	printf("No subsets possible ");
	else
	printf("No. of subsets possible : %d",res);
	return 0;
}
